---
- name: Stop running homeassistant service
  ansible.builtin.command: echo "Stop Home Assistant"
  changed_when: false
  notify: "Stop Home Assistant"

- name: Flush Handlers
  ansible.builtin.meta: flush_handlers

- name: Backup current installation and remove old installation, Backupfile stored in home directory
  community.general.archive:
    path: "{{ ha_conf_dir }}"
    dest: "{{ ha_backup_existing_installation_dir }}/homeassistant-backup-{{ ansible_date_time.date }}.tar.gz"
    mode: "0775"
    owner: "{{ ha_user }}"
    group: "{{ ha_group }}"
    format: gz
    remove: false
  when: ha_python_update | bool

- name: Remove old installation
  ansible.builtin.file:
    path: "{{ ha_conf_dir }}"
    state: absent
  when: ha_python_update | bool

- name: Install dependencies
  ansible.builtin.import_tasks: install_dependencies.yml
  when: ha_python_update | bool

- name: Install required python modules (pre-install in virtual environment)
  ansible.builtin.pip:
    name:
      - colorlog
      - wheel
      - appdirs
      - packaging
      - aiohttp_cors
    virtualenv: "{{ ha_conf_dir }}"
    virtualenv_site_packages: 1
    virtualenv_command: "{{ py_which_out }} -m venv"
  when: ha_python_update | bool

- name: Update Homeassistant in virtual environment to "{{ ha_version }}"
  ansible.builtin.pip:
    name: homeassistant
    version: "{{ ha_version }}"
    virtualenv: "{{ ha_conf_dir }}"
    virtualenv_site_packages: 1
    virtualenv_command: "{{ py_which_out }} -m venv"
  when: ha_version_update | bool

- name: Change owner of homeassistant directory
  ansible.builtin.import_tasks: change_ownership.yml
  notify: "Restart Home Assistant"
